# Generated by Django 5.1.5 on 2025-02-11 11:12

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Preguntas',
            fields=[
                ('id_pregunta', models.AutoField(primary_key=True, serialize=False)),
                ('categoria', models.CharField(choices=[('ANS', 'Ansiedad'), ('EST', 'Estrés'), ('DIA', 'Diálogo'), ('AUT', 'Autoestima'), ('RES', 'Resiliencia'), ('EMP', 'Empatía')], default='ANS', max_length=3)),
                ('pregunta', models.CharField(max_length=200)),
                ('respuesta', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioPersonalizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('estudiante', 'Estudiante'), ('psicologo', 'Psicólogo'), ('administrativo', 'Administrativo')], default='estudiante', max_length=20)),
                ('tipo_identificacion', models.CharField(blank=True, choices=[('cedula', 'Cédula'), ('tarjeta_identidad', 'Tarjeta de Identidad')], max_length=20, null=True)),
                ('identificacion', models.CharField(max_length=20, unique=True)),
                ('eps', models.CharField(blank=True, default='ninguna', max_length=200, null=True)),
                ('alergias', models.CharField(blank=True, default='ninguna', max_length=200, null=True)),
                ('enfermedades', models.CharField(blank=True, default='ninguna', max_length=200, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='emedia/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='usuario_personalizado_groups', related_query_name='usuario_personalizado', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='usuario_personalizado_user_permissions', related_query_name='usuario_personalizado', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='administrativo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='estudiante', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Psicologo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especializacion', models.CharField(blank=True, max_length=200, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='psicologo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miércoles', 'Miércoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes'), ('Sábado', 'Sábado'), ('Domingo', 'Domingo')], max_length=10)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('disponible', models.BooleanField(default=True)),
                ('psicologo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='dashboard.psicologo')),
            ],
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_hora', models.DateTimeField(help_text='Indica la fecha y hora en la que se realizará la cita.', verbose_name='Fecha y Hora de la Cita')),
                ('asunto', models.CharField(help_text='Tema o motivo de la cita.', max_length=255, verbose_name='Asunto')),
                ('estado', models.CharField(choices=[('agendada', 'Agendada'), ('cancelada', 'Cancelada'), ('completada', 'Completada')], default='agendada', max_length=20, verbose_name='Estado')),
                ('notas', models.TextField(blank=True, help_text='Comentarios adicionales (opcional).', null=True, verbose_name='Notas')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='dashboard.estudiante', verbose_name='Estudiante')),
                ('psicologo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='dashboard.psicologo', verbose_name='Psicólogo')),
            ],
        ),
    ]
